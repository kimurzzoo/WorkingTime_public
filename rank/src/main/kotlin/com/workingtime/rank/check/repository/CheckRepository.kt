package com.workingtime.rank.check.repository

import com.workingtime.rank.check.entity.Check
import com.workingtime.rank.rank.dao.AvgRankWorkingTimeDAO
import com.workingtime.rank.rank.dao.AvgUserWorkingTimeDAO
import org.springframework.data.domain.Pageable
import org.springframework.data.jpa.repository.JpaRepository
import org.springframework.data.jpa.repository.Query
import org.springframework.data.repository.PagingAndSortingRepository
import org.springframework.stereotype.Repository
import java.time.LocalDateTime

@Repository
interface CheckRepository : JpaRepository<Check, Long>, PagingAndSortingRepository<Check, Long>{

    /*@Query("select sum(datediff(SECOND, \"check\".\"start_time\", \"check\".\"end_time\")) as \"avgtime\" from \"check\" inner join \"company\" on (\"check\".\"company_id\" = \"company\".\"id\") where \"check\".\"user_id\" = :userId and (\"company\".\"name\" = :companyName) and (\"check\".\"start_time\" between :startDate and :endDate) and (\"check\".\"end_time\" between :startDate and :endDate)", nativeQuery = true)
    fun findSumUserWorkingTime(userId : Long?, companyName : String, startDate : LocalDateTime, endDate : LocalDateTime) : AvgUserWorkingTimeDAO

    @Query("select sum(datediff(SECOND, \"check\".\"start_time\", \"check\".\"end_time\")) as \"avgtime\" from \"check\" inner join \"company\" on (\"check\".\"company_id\" = \"company\".\"id\") where \"check\".\"user_id\" = :userId and (\"check\".\"start_time\" between :startDate and :endDate) and (\"check\".\"end_time\" between :startDate and :endDate)", nativeQuery = true)
    fun findSumUserWorkingTime(userId : Long?, startDate : LocalDateTime, endDate : LocalDateTime) : AvgUserWorkingTimeDAO

    @Query("select avg(\"temptable\".\"sumtime\") as \"avgtime\" from (select sum(datediff(SECOND, \"check\".\"start_time\", \"check\".\"end_time\")) as \"sumtime\", \"check\".\"user_id\" from \"check\" inner join \"company\" on (\"check\".\"company_id\" = \"company\".\"id\") where (\"company\".\"name\" = :companyName) and (\"check\".\"start_time\" between :startDate and :endDate) and (\"check\".\"end_time\" between :startDate and :endDate) group by \"check\".\"user_id\") \"temptable\"", nativeQuery = true)
    fun findAvgSumMyCompanyWorkingTime(companyName : String, startDate : LocalDateTime, endDate : LocalDateTime) : AvgUserWorkingTimeDAO

    @Query("select avg(\"temptable\".\"sumtime\") as \"avgtime\" from (select sum(datediff(SECOND, \"check\".\"start_time\", \"check\".\"end_time\")) as \"sumtime\", \"check\".\"user_id\" from \"check\" where (\"check\".\"start_time\" between :startDate and :endDate) and (\"check\".\"end_time\" between :startDate and :endDate) group by \"check\".\"user_id\") \"temptable\"", nativeQuery = true)
    fun findAllWorkingTime(startDate : LocalDateTime, endDate : LocalDateTime) : AvgUserWorkingTimeDAO

    @Query("select avg(\"temptable\".\"sumtime\") as \"avgtime\", \"temptable\".\"company_id\" as \"id\", \"temptable\".\"company_name\" as \"name\" from (select sum(datediff(SECOND, \"check\".\"start_time\", \"check\".\"end_time\")) as \"sumtime\", \"check\".\"user_id\" as \"user_id\", \"check\".\"company_id\" as \"company_id\", \"company\".\"name\" as \"company_name\" from \"check\" inner join \"company\" on (\"check\".\"company_id\" = \"company\".\"id\") where (\"check\".\"start_time\" between :startDate and :endDate) and (\"check\".\"end_time\" between :startDate and :endDate) group by \"check\".\"user_id\" , \"check\".\"company_id\") \"temptable\" group by \"temptable\".\"company_id\" order by \"avgtime\" asc", countQuery = "select avg(\"temptable\".\"sumtime\") as \"avgtime\", \"temptable\".\"company_id\" as \"id\", \"temptable\".\"company_name\" as \"name\" from (select sum(datediff(SECOND, \"check\".\"start_time\", \"check\".\"end_time\")) as \"sumtime\", \"check\".\"user_id\" as \"user_id\", \"check\".\"company_id\" as \"company_id\", \"company\".\"name\" as \"company_name\" from \"check\" inner join \"company\" on (\"check\".\"company_id\" = \"company\".\"id\") where (\"check\".\"start_time\" between :startDate and :endDate) and (\"check\".\"end_time\" between :startDate and :endDate) group by \"check\".\"user_id\" , \"check\".\"company_id\") \"temptable\" group by \"temptable\".\"company_id\" order by \"avgtime\" asc", nativeQuery = true)
    fun findTopShortestWorkingTime(startDate : LocalDateTime, endDate : LocalDateTime, pageable : Pageable) : List<AvgRankWorkingTimeDAO>

    @Query("select avg(\"temptable\".\"sumtime\") as \"avgtime\", \"temptable\".\"company_id\" as \"id\", \"temptable\".\"company_name\" as \"name\" from (select sum(datediff(SECOND, \"check\".\"start_time\", \"check\".\"end_time\")) as \"sumtime\", \"check\".\"user_id\" as \"user_id\", \"check\".\"company_id\" as \"company_id\", \"company\".\"name\" as \"company_name\" from \"check\" inner join \"company\" on (\"check\".\"company_id\" = \"company\".\"id\") where (\"check\".\"start_time\" between :startDate and :endDate) and (\"check\".\"end_time\" between :startDate and :endDate) group by \"check\".\"user_id\" , \"check\".\"company_id\") \"temptable\" group by \"temptable\".\"company_id\" order by \"avgtime\" desc", countQuery = "select avg(\"temptable\".\"sumtime\") as \"avgtime\", \"temptable\".\"company_id\" as \"id\", \"temptable\".\"company_name\" as \"name\" from (select sum(datediff(SECOND, \"check\".\"start_time\", \"check\".\"end_time\")) as \"sumtime\", \"check\".\"user_id\" as \"user_id\", \"check\".\"company_id\" as \"company_id\", \"company\".\"name\" as \"company_name\" from \"check\" inner join \"company\" on (\"check\".\"company_id\" = \"company\".\"id\") where (\"check\".\"start_time\" between :startDate and :endDate) and (\"check\".\"end_time\" between :startDate and :endDate) group by \"check\".\"user_id\" , \"check\".\"company_id\") \"temptable\" group by \"temptable\".\"company_id\" order by \"avgtime\" desc", nativeQuery = true)
    fun findTopLongestWorkingTime(startDate : LocalDateTime, endDate : LocalDateTime, pageable : Pageable) : List<AvgRankWorkingTimeDAO>*/ //h2

    @Query("select sum(TIMESTAMPDIFF(SECOND, `check`.start_time, `check`.end_time)) as avgtime from `check` inner join company on (`check`.company_id = company.id) where `check`.user_id = :userId and (company.name = :companyName) and (`check`.start_time between :startDate and :endDate) and (`check`.end_time between :startDate and :endDate)", nativeQuery = true)
    fun findSumUserWorkingTime(userId : Long?, companyName : String, startDate : LocalDateTime, endDate : LocalDateTime) : AvgUserWorkingTimeDAO

    @Query("select sum(TIMESTAMPDIFF(SECOND, `check`.start_time, `check`.end_time)) as avgtime from `check` inner join company on (`check`.company_id = company.id) where `check`.user_id = :userId and (`check`.start_time between :startDate and :endDate) and (`check`.end_time between :startDate and :endDate)", nativeQuery = true)
    fun findSumUserWorkingTime(userId : Long?, startDate : LocalDateTime, endDate : LocalDateTime) : AvgUserWorkingTimeDAO

    @Query("select avg(temptable.sumtime) as avgtime from (select sum(TIMESTAMPDIFF(SECOND, `check`.start_time, `check`.end_time)) as sumtime, `check`.user_id from `check` inner join company on (`check`.company_id = company.id) where (company.name = :companyName) and (`check`.start_time between :startDate and :endDate) and (`check`.end_time between :startDate and :endDate) group by `check`.user_id) temptable", nativeQuery = true)
    fun findAvgSumMyCompanyWorkingTime(companyName : String, startDate : LocalDateTime, endDate : LocalDateTime) : AvgUserWorkingTimeDAO

    @Query("select avg(temptable.sumtime) as avgtime from (select sum(TIMESTAMPDIFF(SECOND, `check`.start_time, `check`.end_time)) as sumtime, `check`.user_id from `check` where (`check`.start_time between :startDate and :endDate) and (`check`.end_time between :startDate and :endDate) group by `check`.user_id) temptable", nativeQuery = true)
    fun findAllWorkingTime(startDate : LocalDateTime, endDate : LocalDateTime) : AvgUserWorkingTimeDAO

    @Query("select avg(temptable.sumtime) as avgtime, temptable.company_id as id, temptable.company_name as name from (select sum(TIMESTAMPDIFF(SECOND, `check`.start_time, `check`.end_time)) as sumtime, `check`.user_id as user_id, `check`.company_id as company_id, company.name as company_name from `check` inner join company on (`check`.company_id = company.id) where (`check`.start_time between :startDate and :endDate) and (`check`.end_time between :startDate and :endDate) group by `check`.user_id , `check`.company_id) temptable group by temptable.company_id order by avgtime asc", countQuery = "select avg(temptable.sumtime) as avgtime, temptable.company_id as id, temptable.company_name as name from (select sum(TIMESTAMPDIFF(SECOND, `check`.start_time, `check`.end_time)) as sumtime, `check`.user_id as user_id, `check`.company_id as company_id, company.name as company_name from `check` inner join company on (`check`.company_id = company.id) where (`check`.start_time between :startDate and :endDate) and (`check`.end_time between :startDate and :endDate) group by `check`.user_id , `check`.company_id) temptable group by temptable.company_id order by avgtime asc", nativeQuery = true)
    fun findTopShortestWorkingTime(startDate : LocalDateTime, endDate : LocalDateTime, pageable : Pageable) : List<AvgRankWorkingTimeDAO>

    @Query("select avg(temptable.sumtime) as avgtime, temptable.company_id as id, temptable.company_name as name from (select sum(TIMESTAMPDIFF(SECOND, `check`.start_time, `check`.end_time)) as sumtime, `check`.user_id as user_id, `check`.company_id as company_id, company.name as company_name from `check` inner join company on (`check`.company_id = company.id) where (`check`.start_time between :startDate and :endDate) and (`check`.end_time between :startDate and :endDate) group by `check`.user_id , `check`.company_id) temptable group by temptable.company_id order by avgtime desc", countQuery = "select avg(temptable.sumtime) as avgtime, temptable.company_id as id, temptable.company_name as name from (select sum(TIMESTAMPDIFF(SECOND, `check`.start_time, `check`.end_time)) as sumtime, `check`.user_id as user_id, `check`.company_id as company_id, company.name as company_name from `check` inner join company on (`check`.company_id = company.id) where (`check`.start_time between :startDate and :endDate) and (`check`.end_time between :startDate and :endDate) group by `check`.user_id , `check`.company_id) temptable group by temptable.company_id order by avgtime desc", nativeQuery = true)
    fun findTopLongestWorkingTime(startDate : LocalDateTime, endDate : LocalDateTime, pageable : Pageable) : List<AvgRankWorkingTimeDAO> //mysql
}